# Этот файл реализует мониторинг логов приложений 
# используя кластер Elasticsearch 

version: '3'

services:
  # Одиночный elasticsearch
  # E L A S T I C S E A R C H   -----------------------------------------------------------
  es01:
    #image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    image: elasticsearch:7.7.0
    container_name: es01
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      # - node.name=es01
      # - cluster.name=es-log-monitor-cluster
      # - discovery.seed_hosts=es02,es03
      # - cluster.initial_master_nodes=es01,es02,es03
      # - cluster.initial_master_nodes=es01

      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

      # добавить это к каждой службе эластик если свободного места на диске < 10%

      # в противном случае шарды не будут двигаться
      # - cluster.routing.allocation.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # # ports:
    #   - 9200:9200
    volumes:
      - ./elastic-data:/usr/share/elasticsearch/data
  
  





  # # Кластер elasticsearch
  # # E L A S T I C S E A R C H   C L U S T E R  B E G I N -----------------------------------------------------------
  # es01:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
  #   container_name: es01
  #   restart: unless-stopped
  #   environment:
  #     - node.name=es01
  #     - cluster.name=es-log-monitor-cluster
  #     - discovery.seed_hosts=es02,es03
  #     - cluster.initial_master_nodes=es01,es02,es03
  #     # - cluster.initial_master_nodes=es01
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     # добавить это к каждой службе эластик если свободного места на диске < 10%
  #     # в противном случае шарды не будут двигаться
  #     # - cluster.routing.allocation.disk.threshold_enabled=false
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   # ports:
  #   #   - 9200:9200
  #   volumes:
  #     - data01:/usr/share/elasticsearch/data

  # es02:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
  #   container_name: es02
  #   restart: unless-stopped
  #   environment:
  #     - node.name=es02
  #     - cluster.name=es-log-monitor-cluster
  #     - discovery.seed_hosts=es01,es03
  #     - cluster.initial_master_nodes=es01,es02,es03
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - data02:/usr/share/elasticsearch/data
  
  # es03:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
  #   container_name: es03
  #   restart: unless-stopped
  #   environment:
  #     - node.name=es03
  #     - cluster.name=es-log-monitor-cluster
  #     - discovery.seed_hosts=es01,es02
  #     - cluster.initial_master_nodes=es01,es02,es03
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - data03:/usr/share/elasticsearch/data
  # # E L A S T I C S E A R C H   C L U S T E R  E N D -----------------------------------------------------------
  
  
  
  # Kibana. Визуализация данных elasticsearch
  rg-corpus-kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    container_name: rg-corpus-kibana
    restart: unless-stopped
    # ports:
    #   - 5601:5601
    environment:
      ELASTICSEARCH_HOSTS: '["http://es01:9200"]'
      # ELASTICSEARCH_HOSTS: '["http://es01:9200","http://es02:9200","http://es03:9200"]'
  
  # Cerebro. Визуализация кластера elasticsearch
  rg-corpus-cerebro:
    image: lmenezes/cerebro
    container_name: rg-corpus-cerebro
    restart: unless-stopped
    # left to try through auth-proxy
    # ports:
    #   - 9000:9000
    environment:
      CEREBRO_PORT: 9000
    

  # Caddy HTTP сервер, добавлен для базовой аутентификации к Кибане
  # и ограничения доступа к elasticsearch со стороны внешних программ.
  # Параметры проксирования определены в Caddyfile
  rg-corpus-caddy:
    image: caddy:2.0.0-alpine
    container_name: rg-corpus-caddy
    restart: unless-stopped
    ports:
      - '9094:8080'
    volumes:
      - ./configs/Caddyfile:/etc/caddy/Caddyfile
      - ./www:/www



# volumes for Elasticsearch data and Portainer
# volumes:
#   data01:
#   data02:
#   data03:
#   portainer_data:
#   notebook_data:

# outer network to communicate with other services 
networks:
  default:
    external:
      name: auth_proxy_network
